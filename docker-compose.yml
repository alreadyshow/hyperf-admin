version: "3"

networks: 
    my-app:

services:

    nginx:
        restart: always
        container_name: nginx
        # deploy:
        #     resources:
        #         limits:
        #             cpus: '4'
        #             memory: 50M
        #         reservations:
        #             cpus: '0.25'
        #             memory: 20M
        image: alreadyshow/nginx:base
        environment:
            - HYPERF_UPSTREAM_CONTAINER=php
            - HYPERF_UPSTREAM_PORT=9501
            - FPM_UPSTREAM_CONTAINER=php-fpm
            - FPM_UPSTREAM_PORT=9000
            - TZ=Asia/Shanghai
        volumes:
            - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./:/var/www:cached
            - ./etc/nginx/logs:/var/log/nginx
            - ./etc/nginx/sites/:/etc/nginx/sites-available:ro
            - ./etc/nginx/ssl:/etc/nginx/ssl
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - php
            - php-fpm
        networks:
            my-app:
                aliases:
                    - "dszj.com"

    php-fpm:
        image: alreadyshow/dszj-fpm:base
        container_name: php-fpm
        restart: always
        tty: true
        # deploy:
        #     resources:
        #         limits:
        #             cpus: '4'
        #             memory: 256M
        #         reservations:
        #             cpus: '0.25'
        #             memory: 20M
        environment:
            - TZ=Asia/Shanghai
        ports:
            - "9000"
        volumes:
            - ./:/var/www:ro
            - ./etc/php/log:/usr/local/var/log:ro
        networks:
            my-app:
    php:
        build:
            context: ./
            dockerfile: Dockerfile-hyperf
        container_name: php
        restart: always # 自动重启
        tty: true
        init: true
        # deploy:
        #     resources:
        #         limits:
        #             cpus: '4'
        #             memory: 256M
        #         reservations:
        #             cpus: '0.25'
        #             memory: 20M
        environment:
            - SCAN_CACHEABLE=false
            - TZ=Asia/Shanghai
        ports:
            - "9501"
        privileged: true
        volumes:
            - ./:/var/www:rw
        networks: 
            my-app:

    mysql:
        build:
            context: .
            dockerfile: Dockerfile-mysql
        restart: always
        container_name: mysql
        # deploy:
        #     resources:
        #         limits:
        #             cpus: '4'
        #             memory: 500M
        #         reservations:
        #             cpus: '0.25'
        #             memory: 20M
        environment:
            - MYSQL_DATABASE=hyperf
            - MYSQL_USER=hyperf
            - MYSQL_PASSWORD=hyperf@Admin123
            - MYSQL_ROOT_PASSWORD=hyperf@Admin123
            - TZ=Asia/Shanghai
        volumes: 
            - ./etc/mysql/my.cnf:/etc/mysql/conf.d/source/my.cnf:ro
            - ./data/mysql/log/:/var/log/mysql/:rw
            - ./data/mysql/lib/:/var/lib/mysql/:rw
            - ./data/mysql/logbin/:/var/log/mysql-logbin/:rw
        ports: 
            - "3306:3306"
        networks: 
            my-app:

    redis:
        build: 
            context: .
            dockerfile: Dockerfile-redis
        restart: always
        container_name: redis
        # deploy:
        #     resources:
        #         limits:
        #             cpus: '2'
        #             memory: 500M
        #         reservations:
        #             cpus: '0.25'
        #             memory: 20M
        environment:
            - TZ=Asia/Shanghai
        volumes: 
            - ./data/redis:/data
            - ./etc/redis/redis.conf:/usr/local/etc/redis.conf:ro
        ports: 
            - "6379:6379"
        networks:
            my-app:

    # splunk:
    #     # build: 
    #     #     context: .
    #     #     dockerfile: Dockerfile-splunk
    #     image: splunk/splunk:latest
    #     restart: always
    #     container_name: splunk
    #     environment:
    #         - TZ=RPC
    #         - SPLUNK_PASSWORD=log@Admin123
    #         - SPLUNK_START_ARGS=--accept-license
    #     volumes: 
    #         - "./:/data"
    #     ports: 
    #         - "8000:8000"
    #     networks:
    #         my-app:
    finderweb:
        # 默认账号： admin / dszj@Admin123 运维账号：devops / daishuV5
        # build: 
        #     context: .
        #     dockerfile: Dockerfile-finderweb
        image: adockero/finderweb
        restart: always
        container_name: finderweb
        environment:
            - TZ=RPC
        volumes: 
            - ./:/www/
            - ./etc/finderconf/:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/META-INF/conf/
        ports: 
            - "18080:8080"
        networks:
            my-app:
    
    # mssql:
    #     # build: 
    #     #     context: .
    #     #     dockerfile: Dockerfile-mssql
    #     image: mcr.microsoft.com/mssql/server:2017-latest
    #     container_name: mssql
    #     # restart: always
    #     tty: true
    #     volumes: 
    #     #     - ./etc/mssql/:/usr/config/
    #         - ./etc/mssql/:/opt/setup/
    #     environment: 
    #         - ACCEPT_EULA=Y
    #         - SA_PASSWORD=Dszj@123456!
    #         # - MSSQL_PID=Developer
    #         # - MSSQL_DB=review
    #         # - MSSQL_USER=dszj
    #         # - MSSQL_PASSWORD=dszj@Admin123
    #     ports:
    #         - "11433:1433"
    #     networks:
    #         my-app:

    # oracle:
    #     # build: 
    #     #     context: .
    #     #     dockerfile: Dockerfile-oracle
    #     image: gvenzl/oracle-xe:latest
    #     container_name: oracle
    #     # restart: always
    #     volumes:
    #         - ./data/oracle:/opt/oracle/oradat
    #     environment: 
    #         - ORACLE_PASSWORD=123456
    #         - APP_USER=dszj
    #         - APP_USER_PASSWORD=dszj@Admin123
    #     ports:
    #         - "1521:1521"
    
    # oracle-db:
    #     image: oracleinanutshell/oracle-xe-11g:latest
    #     environment:
    #         - ORACLE_ALLOW_REMOTE=true
    #     ports:
    #         - 1521:1521
    #         - 5500:5500

    #     networks:
    #         my-app:



    